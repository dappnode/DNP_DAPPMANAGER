import "mocha";
import { expect } from "chai";
import fs from "fs";
import params from "../../src/params";

import getUserActionLogs from "../../src/calls/getUserActionLogs";
import { cleanTestDir, createTestDir } from "../testUtils";

const userActionLogsFilename = params.userActionLogsFilename;
const log1 = "log_1";
const log2 = "log_2";
const log3 = "log_3";
const log4 = "log_4";

// User logs are generated by winston, in an appending fashion
const userActionLogs = [log1, log2, log3, log4].join("\n");

describe("Call function: getUserActionLogs", function() {
  before(async () => {
    await createTestDir();
    fs.writeFileSync(userActionLogsFilename, userActionLogs);
  });

  it("should return the latest two logs", async () => {
    const result = await getUserActionLogs({
      fromLog: 0,
      numLogs: 2
    });
    expect(result).to.equal([log4, log3].join("\n"));
  });

  it("should return the next two logs", async () => {
    const result = await getUserActionLogs({
      fromLog: 2,
      numLogs: 2
    });
    expect(result).to.equal([log2, log1].join("\n"));
  });

  it("should return all logs, with the default values 0, 50", async () => {
    const result = await getUserActionLogs({});
    expect(result).to.equal([log4, log3, log2, log1].join("\n"));
  });

  after(async () => {
    await cleanTestDir();
  });
});
