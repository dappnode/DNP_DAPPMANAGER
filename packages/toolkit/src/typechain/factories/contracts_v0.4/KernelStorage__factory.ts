/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { ethers } from "ethers";
import type {
  Signer,
  ContractTransactionResponse,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common.js";
import type {
  KernelStorage,
  KernelStorageInterface,
} from "../../contracts_v0.4/KernelStorage.js";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "KERNEL_APP_ID",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "APP_ADDR_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "KERNEL_APP",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    name: "apps",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "CORE_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ACL_APP",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ACL_APP_ID",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "APP_BASES_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6060604052341561000f57600080fd5b6103b88061001e6000396000f30060606040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631113ed0d8114610092578063178e6079146100b757806325012699146100ca57806338bb6def146100dd578063756f60491461011c578063a3b4b07f1461012f578063cbcc65eb14610142578063db8a61d414610155575b600080fd5b341561009d57600080fd5b6100a5610168565b60405190815260200160405180910390f35b34156100c257600080fd5b6100a561019c565b34156100d557600080fd5b6100a56101d0565b34156100e857600080fd5b6100f360043561024c565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b341561012757600080fd5b6100a5610274565b341561013a57600080fd5b6100a56102a8565b341561014d57600080fd5b6100a5610324565b341561016057600080fd5b6100a5610358565b6040517f6b65726e656c2e617261676f6e706d2e657468000000000000000000000000008152601301604051809103902081565b6040517f61707000000000000000000000000000000000000000000000000000000000008152600301604051809103902081565b6040517f636f726500000000000000000000000000000000000000000000000000000000815260040160405180910390206040517f6b65726e656c2e617261676f6e706d2e6574680000000000000000000000000081526013016040518091039020604051918252602082015260409081019051809103902081565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6040517f636f7265000000000000000000000000000000000000000000000000000000008152600401604051809103902081565b6040517f6170700000000000000000000000000000000000000000000000000000000000815260030160405180910390206040517f61636c2e617261676f6e706d2e6574680000000000000000000000000000000081526010016040518091039020604051918252602082015260409081019051809103902081565b6040517f61636c2e617261676f6e706d2e657468000000000000000000000000000000008152601001604051809103902081565b6040517f626173650000000000000000000000000000000000000000000000000000000081526004016040518091039020815600a165627a7a723058200f2be527d8c8f5ddfef1a5b544fdc96f99e0960b32db8940424f974d50bb51260029";

type KernelStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ethers.ContractFactory>;

const isSuperArgs = (
  xs: KernelStorageConstructorParams
): xs is ConstructorParameters<typeof ethers.ContractFactory> => xs.length > 1;

export class KernelStorage__factory extends ethers.ContractFactory {
  constructor(...args: KernelStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      KernelStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KernelStorage__factory {
    return super.connect(runner) as KernelStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KernelStorageInterface {
    return new ethers.Interface(_abi) as KernelStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KernelStorage {
    return new ethers.Contract(
      address,
      _abi,
      runner
    ) as unknown as KernelStorage;
  }
}
