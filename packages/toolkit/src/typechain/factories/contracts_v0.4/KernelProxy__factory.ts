/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { ethers } from "ethers";
import type {
  Signer,
  AddressLike,
  ContractTransactionResponse,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common.js";
import type {
  KernelProxy,
  KernelProxyInterface,
} from "../../contracts_v0.4/KernelProxy.js";

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "KERNEL_APP_ID",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "APP_ADDR_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "KERNEL_APP",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    name: "apps",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "CORE_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ACL_APP",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "ACL_APP_ID",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "APP_BASES_NAMESPACE",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_kernelImpl",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
] as const;

const _bytecode =
  "0x6060604052341561000f57600080fd5b6040516020806105c98339810160405280805191508190506000806040517f636f726500000000000000000000000000000000000000000000000000000000815260040160405180910390206040517f6b65726e656c2e617261676f6e706d2e6574680000000000000000000000000081526013016040518091039020604051918252602082015260409081019051908190039020815260208101919091526040016000208054600160a060020a0392909216600160a060020a0319909216919091179055506104e5806100e46000396000f30060606040526004361061008d5763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416631113ed0d811461017b578063178e6079146101a057806325012699146101b357806338bb6def146101c6578063756f604914610205578063a3b4b07f14610218578063cbcc65eb1461022b578063db8a61d41461023e575b6101796000806040517f636f726500000000000000000000000000000000000000000000000000000000815260040160405180910390206040517f6b65726e656c2e617261676f6e706d2e657468000000000000000000000000008152601301604051809103902060405191825260208201526040908101905180910390206000191660001916815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166000368080601f016020809104026020016040519081016040528181529291906020840183838082843750610251945050505050565b005b341561018657600080fd5b61018e61028d565b60405190815260200160405180910390f35b34156101ab57600080fd5b61018e6102c1565b34156101be57600080fd5b61018e6102f5565b34156101d157600080fd5b6101dc600435610371565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b341561021057600080fd5b61018e610399565b341561022357600080fd5b61018e6103cd565b341561023657600080fd5b61018e610449565b341561024957600080fd5b61018e61047d565b61025a826104b1565b151561026557600080fd5b600080825160208401856127105a03f43d604051816000823e828015610289578282f35b8282fd5b6040517f6b65726e656c2e617261676f6e706d2e657468000000000000000000000000008152601301604051809103902081565b6040517f61707000000000000000000000000000000000000000000000000000000000008152600301604051809103902081565b6040517f636f726500000000000000000000000000000000000000000000000000000000815260040160405180910390206040517f6b65726e656c2e617261676f6e706d2e6574680000000000000000000000000081526013016040518091039020604051918252602082015260409081019051809103902081565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6040517f636f7265000000000000000000000000000000000000000000000000000000008152600401604051809103902081565b6040517f6170700000000000000000000000000000000000000000000000000000000000815260030160405180910390206040517f61636c2e617261676f6e706d2e6574680000000000000000000000000000000081526010016040518091039020604051918252602082015260409081019051809103902081565b6040517f61636c2e617261676f6e706d2e657468000000000000000000000000000000008152601001604051809103902081565b6040517f62617365000000000000000000000000000000000000000000000000000000008152600401604051809103902081565b6000903b11905600a165627a7a72305820af106e39b3566c3a9cbf8c542288902783bb70a0de847fdefb3293051964222b0029";

type KernelProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ethers.ContractFactory>;

const isSuperArgs = (
  xs: KernelProxyConstructorParams
): xs is ConstructorParameters<typeof ethers.ContractFactory> => xs.length > 1;

export class KernelProxy__factory extends ethers.ContractFactory {
  constructor(...args: KernelProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _kernelImpl: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_kernelImpl, overrides || {});
  }
  override deploy(
    _kernelImpl: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_kernelImpl, overrides || {}) as Promise<
      KernelProxy & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KernelProxy__factory {
    return super.connect(runner) as KernelProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KernelProxyInterface {
    return new ethers.Interface(_abi) as KernelProxyInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): KernelProxy {
    return new ethers.Contract(address, _abi, runner) as unknown as KernelProxy;
  }
}
