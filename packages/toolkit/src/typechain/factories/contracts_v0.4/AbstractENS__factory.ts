/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { ethers } from "ethers";
import type { ContractRunner } from "ethers";
import type {
  AbstractENS,
  AbstractENSInterface,
} from "../../contracts_v0.4/AbstractENS.js";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_node",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "_label",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "_owner",
        type: "address",
      },
    ],
    name: "NewOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_node",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "_owner",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_node",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "_resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_node",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "_ttl",
        type: "uint64",
      },
    ],
    name: "NewTTL",
    type: "event",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "resolver",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
    ],
    name: "ttl",
    outputs: [
      {
        name: "",
        type: "uint64",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
      {
        name: "label",
        type: "bytes32",
      },
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "setSubnodeOwner",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
      {
        name: "_resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_node",
        type: "bytes32",
      },
      {
        name: "_ttl",
        type: "uint64",
      },
    ],
    name: "setTTL",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class AbstractENS__factory {
  static readonly abi = _abi;
  static createInterface(): AbstractENSInterface {
    return new ethers.Interface(_abi) as AbstractENSInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AbstractENS {
    return new ethers.Contract(address, _abi, runner) as unknown as AbstractENS;
  }
}
