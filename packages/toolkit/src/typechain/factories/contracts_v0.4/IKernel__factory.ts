/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { ethers } from "ethers";
import type { ContractRunner } from "ethers";
import type {
  IKernel,
  IKernelInterface,
} from "../../contracts_v0.4/IKernel.js";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "namespace",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "name",
        type: "bytes32",
      },
      {
        indexed: true,
        name: "id",
        type: "bytes32",
      },
      {
        indexed: false,
        name: "app",
        type: "address",
      },
    ],
    name: "SetApp",
    type: "event",
  },
  {
    constant: true,
    inputs: [],
    name: "acl",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "who",
        type: "address",
      },
      {
        name: "where",
        type: "address",
      },
      {
        name: "what",
        type: "bytes32",
      },
      {
        name: "how",
        type: "bytes",
      },
    ],
    name: "hasPermission",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "namespace",
        type: "bytes32",
      },
      {
        name: "name",
        type: "bytes32",
      },
      {
        name: "app",
        type: "address",
      },
    ],
    name: "setApp",
    outputs: [
      {
        name: "id",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "id",
        type: "bytes32",
      },
    ],
    name: "getApp",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IKernel__factory {
  static readonly abi = _abi;
  static createInterface(): IKernelInterface {
    return new ethers.Interface(_abi) as IKernelInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IKernel {
    return new ethers.Contract(address, _abi, runner) as unknown as IKernel;
  }
}
