ARG NODE_VERSION=20.3.0

# Common base so it's cached
# --platform=$BUILDPLATFORM is used build javascript source with host arch
# Otherwise webpack builds on emulated archs can be extremely slow (+1h)
ARG BASE_IMAGE=node:${NODE_VERSION}-alpine

# Initial stage to gather git data
FROM --platform=${BUILDPLATFORM:-amd64} ${BASE_IMAGE} as git-data

WORKDIR /usr/src/app
RUN apk add --no-cache git

COPY .git dappnode_package.json docker/getGitData.js ./

RUN node getGitData /usr/src/app/.git-data.json

# Build binaries (nsupdate, docker, docker-compose)
FROM --platform=${BUILDPLATFORM:-amd64} ${BASE_IMAGE} as build-binaries

RUN apk update && apk add --no-cache docker curl docker-compose xz zip unzip libltdl

# Build + Prod stage
FROM node:${NODE_VERSION}-alpine

ENV COMPOSE_HTTP_TIMEOUT=300 \
  DOCKER_CLIENT_TIMEOUT=300 \
  DOCKER_HOST=unix:///var/run/docker.sock \
  UI_FILES_PATH=/app/packages/admin-ui/build \
  GIT_DATA_PATH=.git-data.json \
  TEST=true \
  REACT_APP_API_URL=http://172.33.1.7:5000/

WORKDIR /app

COPY --from=build-binaries /usr/bin/docker /usr/libexec/docker/cli-plugins/docker-compose \ 
  /usr/bin/curl /usr/bin/zip /usr/bin/unzip /usr/bin/xz /usr/bin/

RUN apk update && apk add --no-cache bash git bind bind-tools bind-dev \ 
  miniupnpc dbus tmux avahi-tools

# python3 build-base

# Copy docker
COPY docker/rndc.conf /etc/bind/
COPY docker/update_local_dyndns.sh /usr/local/bin/update_local_dyndns

# Copy git data
COPY --from=git-data /usr/src/app/.git-data.json $GIT_DATA_PATH

# Copy the src last as it's the layer most likely to change
COPY packages/hostScripts/hostScripts /usr/src/app/hostScripts

COPY docker/start_dev.sh /usr/src/app/start_dev.sh

# Build the src code:
# Copy and install deps first to cache
COPY package.json yarn.lock lerna.json tsconfig.json ./
RUN yarn --frozen-lockfile --non-interactive --ignore-scripts --ignore-optional
COPY packages/admin-ui/package.json \ 
  packages/admin-ui/
COPY packages/dappmanager/package.json \ 
  packages/dappmanager/
COPY packages/common/package.json \ 
  packages/common/
COPY packages/params/package.json \ 
  packages/params/
COPY packages/utils/package.json \ 
  packages/utils/
COPY packages/eventBus/package.json \ 
  packages/eventBus/
COPY packages/logger/package.json \ 
  packages/logger/
COPY packages/dockerCompose/package.json \ 
  packages/dockerCompose/
COPY packages/dockerApi/package.json \ 
  packages/dockerApi/
COPY packages/hostScripts/package.json \
  packages/hostScripts/
COPY packages/db/package.json \
  packages/db/
COPY packages/manifest/package.json \
  packages/manifest/
COPY packages/ipfs/package.json \
  packages/ipfs/
COPY packages/installer/package.json \
  packages/installer/
COPY packages/ethicalMetrics/package.json \
  packages/ethicalMetrics/
COPY packages/httpsPortal/package.json \
  packages/httpsPortal/
RUN yarn --frozen-lockfile --non-interactive --ignore-optional

COPY packages packages

ENV REACT_APP_API_URL /
RUN yarn build

ENTRYPOINT [ "/usr/src/app/start_dev.sh" ]